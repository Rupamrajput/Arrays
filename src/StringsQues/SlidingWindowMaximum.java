package StringsQues;

public class SlidingWindowMaximum {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int lastMax=maximum(nums,0,k-1);
        int[] res = new int[nums.length-k+1];
        res[0] = lastMax;
        for(int i=1; i< nums.length-k+1;i++){
            if(nums[i+k-1]<lastMax) res[i] = lastMax;
            else {
                res[i] = maximum(nums,i,i+k-1);
                lastMax = res[i];
            }
        }
        return res;
    }
    public int maximum(int[] nums,int i, int j){
        int max = Integer.MIN_VALUE;
        while (i<=j){
            if(max<nums[i]) max = nums[i];
            if(max<nums[j]) max = nums[j];
            i++;j--;
        }
        return max;
    }
}
//[9932,9932,9310,9310,9310,9310,9310,9310,9310,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,8875,8875,8875,8875,8698,8698,7604,7604,7604,7604,8989,8989,8989,8989,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9449,9449,9449,9449,9449,9449,9449,9449,9449,9449,9449,9283,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,5933,5933,5699,5660,5660,5660,7193,//6465,7193,7193,7193,7193,7193,7193,7193,7196,8119,8119,8119,8119,8119,8125,8125,8125,8125,8125,8125,8125,8125,8125,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,8422,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9031,9031,9031,9031,9031,7882,7882,7882,7882,7882,7882,7277,7277,7277,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,8948,8948,8948,8948,8948,8948,8901,8901,8901,8901,8901,8901,8901,8901,8901,8901,8831,8831,8831,8831,8831,8831,8831,8831,8831];
//[9932,9932,9310,9310,9310,9310,9310,9310,9310,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,9879,8875,8875,8875,8875,8698,8698,7604,7604,7604,7604,8989,8989,8989,8989,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9762,9449,9449,9449,9449,9449,9449,9449,9449,9449,9449,9449,9283,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,7675,5933,5933,5699,5660,5660,5660,7193,//7193,7193,7193,7193,7193,7193,7193,7193,7196,8119,8119,8119,8119,8119,8125,8125,8125,8125,8125,8125,8125,8125,8125,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9953,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9994,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9682,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,9514,8422,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9398,9031,9031,9031,9031,9031,7882,7882,7882,7882,7882,7882,7277,7277,7277,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,9066,8948,8948,8948,8948,8948,8948,8901,8901,8901,8901,8901,8901,8901,8901,8901,8901,8831,8831,8831,8831,8831,8831,8831,8831,8831]